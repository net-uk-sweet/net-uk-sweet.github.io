{"version":3,"sources":["gridDistance.js","utils.ts","Notification.tsx","Intro.tsx","Form.tsx","Marker.tsx","SimpleCard.tsx","Map.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["gridrefNumeric","gridref","letE","toUpperCase","charCodeAt","letN","e","n","Math","floor","slice","replace","length","sortAlphabetical","a","b","name","getResultsWithinRange","data","searchType","selected","distance","filter","grid","parseInt","ref1","ref2","p1","p2","deltaE","deltaN","sqrt","toFixed","gridDistance","isMunro","tbd","height","formatGridReference","label","bothy","singular","plural","munro","SlideTransition","props","Slide","direction","useStyles","makeStyles","theme","createStyles","alert","boxShadow","Notification","results","useState","open","setOpen","classes","useEffect","alertType","alertMessage","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","TransitionComponent","onClose","Alert","className","severity","Intro","Box","mb","Typography","variant","component","gutterBottom","Form","onSelect","onSearchTypeChange","onDistanceChange","isBothySearch","mt","onSubmit","preventDefault","FormControl","fullWidth","margin","FormLabel","RadioGroup","aria-label","value","onChange","event","newValue","row","FormControlLabel","control","Radio","color","labelPlacement","Divider","Slider","min","max","marks","valueLabelDisplay","aria-labelledby","Autocomplete","id","options","getOptionLabel","option","style","width","renderInput","params","TextField","backgroundColor","borderRadius","position","top","left","animation","animationDelay","zIndex","Marker","location","TerrainIcon","HomeIcon","Icon","iconSize","iconClass","fontSize","root","SimpleCard","url","onClick","List","dense","ListItem","ListItemIcon","ListItemText","primary","secondary","Link","href","mapContainer","right","bottom","Map","lat","lng","zoom","locations","map","setMap","useRef","markers","renderMarkers","mapboxgl","accessToken","container","current","center","on","resize","initializeMap","combinedLocations","forEach","marker","remove","i","popupEl","document","createElement","card","undefined","ReactDOM","render","popup","Popup","offset","closeButton","maxWidth","setDOMContent","el","setLngLat","setPopup","addTo","flyTo","bounds","LngLatBounds","extend","fitBounds","padding","maxZoom","ref","main","display","flex","overflow","toolbar","flexGrow","initialState","App","bothies","sort","munros","useReducer","state","action","resultsWithRange","type","reducer","dispatch","CssBaseline","item","Boolean","window","hostname","match","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a39e946.chunk.js","sourcesContent":["/*\n * Calculate distance between two National Grid Reference points.\n *\n * 100km grid squares are in 5x5 blocks (total 7x13 blocks); \n * blocks increment left-right then top-bottom (HL-JM down to SV-TW);\n * letter I is skipped to give 25 letters.\n *\n * http://www.ordnancesurvey.co.uk/oswebsite/freefun/nationalgrid/nghelp1.html\n */\n\n\nexport default function gridDistance(ref1, ref2) {\n  // ref1 & ref2 may be 6- or 8-digit references eg SU387148 or SU38714856\n\n  // convert to fully numeric references\n  var p1 = gridrefNumeric(ref1);\n  var p2 = gridrefNumeric(ref2);\n\n  // get E/N distances between ref1 & ref2\n  var deltaE = p2[0]-p1[0];\n  var deltaN = p2[1]-p1[1];\n\n  // and pythagoras gives us the distance between the points\n  var dist = Math.sqrt(deltaE*deltaE + deltaN*deltaN);\n\n  return (dist/1000).toFixed(2); // return result in km, 2 decimals\n}\n\n\nfunction gridBearing(ref1, ref2) {\n  // split numeric references into arrays\n  var p1 = gridrefNumeric(ref1);\n  var p2 = gridrefNumeric(ref2);\n\n  // get E/N distances between ref1 & ref2\n  var deltaE = p2[0]-p1[0];\n  var deltaN = p2[1]-p1[1];\n\n  // arctan gives us the bearing, just need to convert -pi..+pi to 0..360 deg\n  var deg = (90-(Math.atan2(deltaN, deltaE)/Math.PI*180)+360) % 360;\n  \n  return deg.toFixed(0);  // return result in degrees, no decimals\n}\n\n\n/* \n * convert standard grid reference ('SU387148') to fully numeric ref ([438700,114800])\n *\n *   note that northern-most grid squares will give 5-digit northings\n *   no error-checking is done on gridref (bad input will give bad results or NaN)\n */\nfunction gridrefNumeric(gridref) {\n  // get numeric values of letter references, mapping A->0, B->1, C->2, etc:\n  var letE = gridref.toUpperCase().charCodeAt(0) - 'A'.charCodeAt(0);\n  var letN = gridref.toUpperCase().charCodeAt(1) - 'A'.charCodeAt(0);\n  // shuffle down letters after 'I' since 'I' is not used in grid:\n  if (letE > 7) letE -= 1;\n  if (letN > 7) letN -= 1;\n\n  // convert grid letters into 100km-square indexes from false origin (grid square SV):\n  var e = ((letE+3)%5)*5 + (letN%5);\n  var n = (19-Math.floor(letE/5)*5) - Math.floor(letN/5);\n\n  // skip grid letters to get numeric part of ref, stripping any spaces:\n  gridref = gridref.slice(2).replace(/ /g,'');\n\n  // append numeric part of references to grid index:\n  e += gridref.slice(0, gridref.length/2);\n  n += gridref.slice(gridref.length/2);\n\n  // normalise to 1m grid:\n  switch (gridref.length) {\n    case 6: e += '00'; n += '00'; break;\n    case 8: e += '0'; n += '0'; break;\n    // 10-digit refs are already 1m\n  }\n\n  return [e, n];\n}","import gridDistance from \"./gridDistance\";\n\nimport { Data, SearchType, ResultType, Munro } from \"./types\";\n\nexport const sortAlphabetical = (a: ResultType, b: ResultType) => {\n  if (a.name > b.name) return 1;\n  if (a.name < b.name) return -1;\n  return 0;\n};\n\nexport const getResultsWithinRange = (\n  data: Data,\n  searchType: SearchType,\n  selected: ResultType,\n  distance: number\n) =>\n  data[searchType === \"bothy\" ? \"munro\" : \"bothy\"].filter(\n    ({ grid }: any) => parseInt(gridDistance(selected.grid, grid)) <= distance\n  );\n\nexport const isMunro = (tbd: ResultType): boolean => {\n  if ((tbd as Munro).height) {\n    return true;\n  }\n  return false;\n};\n\nexport const formatGridReference = (grid: string) =>\n  `${grid.slice(0, 2)} ${grid.slice(2, 5)} ${grid.slice(5, 8)}`;\n\nexport const label = {\n  bothy: {\n    singular: \"bothy\",\n    plural: \"bothies\"\n  },\n  munro: {\n    singular: \"munro\",\n    plural: \"munros\"\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport { Alert } from \"@material-ui/lab\";\nimport { Snackbar, Slide } from \"@material-ui/core\";\nimport { TransitionProps } from \"@material-ui/core/transitions\";\n\nimport { Maybe, ResultType, SearchType } from \"./types\";\nimport { label } from \"./utils\";\n\nfunction SlideTransition(props: TransitionProps) {\n  return <Slide {...props} direction=\"down\" />;\n}\n\nconst AUTO_HIDE_DURATION = 10000;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    alert: {\n      boxShadow:\n        \"0px 5px 5px -3px rgba(0,0,0,0.2), 0px 8px 10px 1px rgba(0,0,0,0.14), 0px 3px 14px 2px rgba(0,0,0,0.12)\"\n    }\n  })\n);\n\ninterface NotificationProps {\n  results: ResultType[];\n  searchType: SearchType;\n  selected: Maybe<ResultType>;\n  distance: number;\n}\n\nexport default function Notification({\n  results,\n  searchType,\n  selected,\n  distance\n}: NotificationProps) {\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n\n  useEffect(() => {\n    setOpen(!!selected);\n  }, [selected]);\n\n  const alertType = results.length ? \"success\" : \"warning\";\n  const alertMessage = results.length\n    ? `Found ${results.length}\n  ${\n    label[searchType === \"bothy\" ? \"munro\" : \"bothy\"][\n      results.length > 1 ? \"plural\" : \"singular\"\n    ]\n  }\n  within ${distance} km of ${selected && selected.name}. Select the icons\n  for more information.`\n    : `There are no ${label[searchType === \"bothy\" ? \"munro\" : \"bothy\"].plural}\n  within ${distance} km of ${selected && (selected as ResultType).name}, try\n  another search or increase the distance.`;\n  return (\n    <Snackbar\n      open={open}\n      autoHideDuration={AUTO_HIDE_DURATION}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      TransitionComponent={SlideTransition}\n      onClose={() => setOpen(false)}\n    >\n      <Alert className={classes.alert} severity={alertType}>\n        {alertMessage}\n      </Alert>\n    </Snackbar>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nexport default function Intro() {\n  return (\n    <Box mb={3}>\n      <header>\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom={true}>\n          Bothy finder\n        </Typography>\n      </header>\n      <Typography variant=\"subtitle1\" component=\"p\" gutterBottom={true}>\n        You can use this tool to find munros within a certain distance of a\n        specific bothy, or bothies within a certain distance of a specific\n        munro.\n      </Typography>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  Box,\n  Slider,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  TextField,\n  Divider\n} from \"@material-ui/core/\";\n\nimport { Maybe, SearchType, ResultType } from \"./types\";\n\ninterface FormProps {\n  data: ResultType[];\n  selected: Maybe<ResultType>;\n  searchType: SearchType;\n  distance: number;\n  onSelect: (selection: ResultType) => void;\n  onSearchTypeChange: (searchType: SearchType) => void;\n  onDistanceChange: (distance: number) => void;\n}\n\nexport default function Form({\n  data,\n  selected,\n  searchType,\n  distance,\n  onSelect,\n  onSearchTypeChange,\n  onDistanceChange\n}: FormProps) {\n  const isBothySearch = searchType === \"bothy\";\n\n  return (\n    <Box mt={1}>\n      <form onSubmit={(e: any) => e.preventDefault()}>\n        <FormControl component=\"fieldset\" fullWidth={true} margin=\"normal\">\n          <FormLabel component=\"legend\">Search for</FormLabel>\n          <RadioGroup\n            aria-label=\"position\"\n            name=\"position\"\n            value={searchType}\n            onChange={(event: any, newValue: string) =>\n              onSearchTypeChange(newValue as SearchType)\n            }\n            row\n          >\n            <FormControlLabel\n              value=\"bothy\"\n              control={<Radio color=\"primary\" />}\n              label=\"Munros\"\n              labelPlacement=\"end\"\n            />\n            <FormControlLabel\n              value=\"munro\"\n              control={<Radio color=\"primary\" />}\n              label=\"Bothies\"\n              labelPlacement=\"end\"\n            />\n          </RadioGroup>\n        </FormControl>\n        <Box mt={1} mb={1}>\n          <Divider />\n        </Box>\n        <FormControl component=\"fieldset\" fullWidth={true} margin=\"normal\">\n          <FormLabel component=\"legend\">{`Within ${distance} km of`}</FormLabel>\n          <Slider\n            value={distance}\n            min={5}\n            max={25}\n            marks={[\n              { value: 5, label: \"5km\" },\n              { value: 10, label: \"10km\" },\n              { value: 15, label: \"15km\" },\n              { value: 20, label: \"20km\" },\n              { value: 25, label: \"25km\" }\n            ]}\n            onChange={(event: any, value: number | number[]) =>\n              onDistanceChange(value as number)\n            }\n            valueLabelDisplay=\"auto\"\n            aria-labelledby=\"non-linear-slider\"\n          />\n        </FormControl>\n        <Box mt={1} mb={1}>\n          <Divider />\n        </Box>\n        <FormControl component=\"fieldset\" fullWidth={true} margin=\"normal\">\n          <Autocomplete\n            id=\"combo-box-demo\"\n            options={data}\n            getOptionLabel={(option: ResultType) =>\n              (option && option.name) || \"search\"\n            }\n            style={{ width: 300 }}\n            value={selected}\n            onChange={(event: any, newValue: Maybe<ResultType>) => {\n              if (newValue) {\n                onSelect(newValue);\n              }\n            }}\n            renderInput={(params: any) => (\n              <TextField\n                {...params}\n                label={isBothySearch ? \"bothy\" : \"munro\"}\n                variant=\"outlined\"\n                fullWidth\n              />\n            )}\n          />\n        </FormControl>\n      </form>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport TerrainIcon from \"@material-ui/icons/Terrain\";\n\nimport { ResultType } from \"./types\";\nimport { isMunro } from \"./utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    bothy: {\n      backgroundColor: \"transparent\",\n      boxShadow: \"0 0 0 rgba(245, 0, 87, 0.4)\",\n      width: 1,\n      height: 1,\n      borderRadius: \"50%\",\n      position: \"absolute\",\n      top: 12,\n      left: 11,\n      animation: `$pulse 2s infinite`,\n      animationDelay: \"3s\",\n      zIndex: -1\n    },\n    munro: {\n      backgroundColor: \"transparent\",\n      boxShadow: \"0 0 0 rgba(245, 0, 87, 0.4)\",\n      width: 1,\n      height: 1,\n      borderRadius: \"50%\",\n      position: \"absolute\",\n      animation: `$pulse 2s infinite`,\n      animationDelay: \"3s\",\n      zIndex: -1,\n      top: 18,\n      left: 16\n    },\n    \"@keyframes pulse\": {\n      \"0%\": {\n        boxShadow: \"0 0 0 0 rgba(245, 0, 87, 0.4)\"\n      },\n      \"70%\": {\n        boxShadow: \"0 0 0 30px rgba(245, 0, 87, 0)\"\n      },\n      \"100%\": {\n        boxShadow: \"0 0 0 0 rgba(245, 0, 87, 0)\"\n      }\n    }\n  })\n);\n\ninterface MarkerProps {\n  location: ResultType;\n  selected: boolean;\n}\n\nexport default function Marker({ location, selected }: MarkerProps) {\n  const classes = useStyles();\n  const [Icon, iconSize, iconClass] = isMunro(location)\n    ? [TerrainIcon, \"large\", classes.munro]\n    : [HomeIcon, \"default\", classes.bothy];\n  const color = selected ? \"secondary\" : \"primary\";\n  return (\n    <>\n      <Icon color={color} fontSize={iconSize as any} />\n      <div className={selected ? iconClass : \"\"} />\n    </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Box from \"@material-ui/core/Box\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HeightIcon from \"@material-ui/icons/Height\";\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\nimport { formatGridReference } from \"./utils\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"250px\"\n  }\n});\n\ntype Props = {\n  name: string;\n  grid: string;\n  url: string;\n  height?: number;\n  selected: boolean;\n  onClick: () => void;\n};\n\nexport default function SimpleCard({\n  name,\n  grid,\n  url,\n  height,\n  selected,\n  onClick\n}: Props) {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root} component=\"article\" onClick={onClick}>\n      <Box mb={2}>\n        <Typography variant=\"h5\" component=\"h2\">\n          {name}\n        </Typography>\n      </Box>\n      <Divider />\n      <List component=\"ul\" aria-label=\"main mailbox folders\" dense>\n        {height && (\n          <ListItem component=\"li\">\n            <ListItemIcon>\n              <HeightIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Height\" secondary={`${height} metres`} />\n          </ListItem>\n        )}\n        <ListItem component=\"li\">\n          <ListItemIcon>\n            <LocationOnIcon />\n          </ListItemIcon>\n          <ListItemText\n            primary=\"Grid reference\"\n            secondary={formatGridReference(grid)}\n          />\n        </ListItem>\n      </List>\n      <Link href={url}>Learn More</Link>\n    </Box>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport mapboxgl from \"mapbox-gl\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\n\nimport { Maybe, ResultType, Munro } from \"./types\";\nimport { isMunro } from \"./utils\";\nimport Marker from \"./Marker\";\nimport SimpleCard from \"./SimpleCard\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    mapContainer: {\n      position: \"absolute\",\n      top: 0,\n      right: 0,\n      left: 0,\n      bottom: 0,\n      margin: 0\n    }\n  })\n);\n\ninterface MapProps {\n  lat: number;\n  lng: number;\n  zoom: number;\n  locations: ResultType[];\n  selected: Maybe<ResultType>;\n}\n\nexport default function Map({ lat, lng, zoom, locations, selected }: MapProps) {\n  const classes = useStyles();\n\n  const [map, setMap] = useState(null);\n  const mapContainer: any = useRef(null);\n\n  const markers: any = useRef([]);\n  const renderMarkers = useRef(false);\n\n  useEffect(() => {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoibmV0LXVrLXN3ZWV0IiwiYSI6ImNrMzRmaGJqdDBpNW8zaXBqaDg2bWxqazQifQ.xVC6ifqr4x70o3xHXnASyA\";\n    const initializeMap = ({ setMap, mapContainer }: any) => {\n      const map: any = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/net-uk-sweet/ck395oc6o23271ct39ql8ph1y\", // stylesheet location\n        center: [lng, lat],\n        zoom: zoom\n      });\n\n      map.on(\"load\", () => {\n        renderMarkers.current = true;\n        setMap(map);\n        map.resize();\n      });\n    };\n\n    if (!map) initializeMap({ setMap, mapContainer });\n  }, [lat, lng, map, zoom]);\n\n  useEffect(() => {\n    let combinedLocations = locations;\n\n    if (selected) {\n      combinedLocations = [selected, ...combinedLocations];\n    }\n    if (markers.current.length) {\n      markers.current.forEach((marker: any) => {\n        marker.remove();\n      });\n    }\n    markers.current = combinedLocations.map((location, i) => {\n      const popupEl = document.createElement(\"div\");\n      const card = (\n        <SimpleCard\n          name={location.name}\n          grid={location.grid}\n          height={isMunro(location) ? (location as Munro).height : undefined}\n          url={location.url}\n          selected={true}\n          onClick={() => {}}\n        />\n      );\n\n      ReactDOM.render(card, popupEl);\n\n      const popup = new mapboxgl.Popup({\n        offset: {\n          top: [-10, 0],\n          right: [-30, -20],\n          bottom: [-10, -35],\n          left: [10, -20]\n        },\n        closeButton: false,\n        maxWidth: \"none\"\n      }).setDOMContent(popupEl);\n\n      const el = document.createElement(\"div\");\n      ReactDOM.render(<Marker location={location} selected={i === 0} />, el);\n\n      return new mapboxgl.Marker(el, { offset: [-10, -15] })\n        .setLngLat([location.lng, location.lat])\n        .setPopup(popup)\n        .addTo(map as any);\n    });\n\n    if (combinedLocations.length === 1) {\n      (map as any).flyTo({ center: combinedLocations[0] });\n    }\n\n    if (combinedLocations.length > 1) {\n      const bounds = new mapboxgl.LngLatBounds();\n\n      combinedLocations.forEach(function({ lng, lat }) {\n        bounds.extend([lng, lat] as any);\n      });\n\n      (map as any).fitBounds(bounds, {\n        padding: 75,\n        maxZoom: 15\n      });\n    }\n  });\n\n  return (\n    <div\n      ref={el => (mapContainer.current = el)}\n      className={classes.mapContainer}\n    />\n  );\n}\n","import React, { useReducer } from \"react\";\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\nimport \"typeface-roboto\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { Divider } from \"@material-ui/core\";\nimport \"./App.css\";\n\nimport { Maybe, Data, SearchType, ResultType } from \"./types\";\nimport { sortAlphabetical, getResultsWithinRange } from \"./utils\";\n\nimport bothies from \"./bothies.json\";\nimport munros from \"./munros.json\";\n\nimport Notification from \"./Notification\";\nimport Intro from \"./Intro\";\nimport Form from \"./Form\";\nimport Map from \"./Map\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    main: {\n      display: \"flex\",\n      flex: 1,\n      height: \"100%\",\n      overflow: \"hidden\"\n    },\n    toolbar: {\n      boxShadow: \"5px 0 5px -2px rgba(0, 0, 0, 0.2)\",\n      padding: \"1.5rem\",\n      width: \"350px\",\n      zIndex: 1\n    },\n    map: {\n      position: \"relative\",\n      flexGrow: 1,\n      margin: 0\n    }\n  })\n);\n\ninterface State {\n  searchType: SearchType;\n  distance: number;\n  selected: Maybe<ResultType>;\n  results: ResultType[];\n}\n\nconst initialState: State = {\n  searchType: \"bothy\",\n  distance: 10,\n  selected: null,\n  results: []\n};\n\nconst reducer = (data: any) => (state: State, action: any): State => {\n  const { searchType, distance } = state;\n  let { selected } = state;\n  let results: ResultType[] = [];\n\n  const resultsWithRange = (selected: ResultType, distance: number) =>\n    getResultsWithinRange(data, searchType, selected, distance);\n\n  switch (action.type) {\n    case \"searchType\":\n      return {\n        ...state,\n        searchType: action.value,\n        selected: null,\n        results: []\n      };\n    case \"distance\":\n      if (selected) {\n        results = resultsWithRange(selected, action.value);\n      }\n      return {\n        ...state,\n        distance: action.value,\n        results\n      };\n    case \"select\":\n      selected = action.value as ResultType;\n      results = resultsWithRange(selected, distance);\n      return {\n        ...state,\n        selected,\n        results\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n\n  const data: Data = {\n    bothy: bothies.sort(sortAlphabetical),\n    munro: munros.sort(sortAlphabetical)\n  };\n\n  const [{ searchType, distance, selected, results }, dispatch] = useReducer(\n    reducer(data),\n    initialState\n  );\n\n  const handleSearchTypeChange = (searchType: SearchType) => {\n    dispatch({ type: \"searchType\", value: searchType });\n  };\n\n  const handleDistanceChange = (distance: number) => {\n    dispatch({ type: \"distance\", value: distance });\n  };\n\n  const handleSelectChange = (item: ResultType) => {\n    dispatch({ type: \"select\", value: item });\n  };\n\n  return (\n    <>\n      <CssBaseline />\n      <Notification\n        results={results}\n        searchType={searchType}\n        selected={selected}\n        distance={distance}\n      />\n      <main className={classes.main}>\n        <aside className={classes.toolbar}>\n          <Intro />\n          <Divider />\n          <Form\n            data={data[searchType]}\n            selected={selected}\n            searchType={searchType}\n            distance={distance}\n            onSelect={handleSelectChange}\n            onSearchTypeChange={handleSearchTypeChange}\n            onDistanceChange={handleDistanceChange}\n          />\n        </aside>\n        <section className={classes.map}>\n          <Map\n            lat={57.09638090114919}\n            lng={-4.298098692290864}\n            zoom={6.75}\n            locations={results}\n            selected={selected}\n          />\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n/* TODO\n    [x] - toasts on results\n    [x] - animated selection icons\n    [x] - border on panel\n    [x] - css duplcication\n    [ ] - mobile\n    [ ] - testing\n*/\n"],"sourceRoot":""}