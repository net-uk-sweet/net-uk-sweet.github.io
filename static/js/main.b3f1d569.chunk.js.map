{"version":3,"sources":["Form.tsx","gridDistance.js","utils.ts","List.tsx","Map.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Form","searchType","search","distance","onSearchTypeChange","onSearchChange","onDistanceChange","handleChange","callback","e","currentTarget","value","isBothySearch","onSubmit","preventDefault","className","type","checked","onChange","htmlFor","id","name","min","max","step","gridrefNumeric","gridref","letE","toUpperCase","charCodeAt","letN","n","Math","floor","slice","replace","length","getResultsWithinRange","data","selected","filter","grid","parseInt","ref1","ref2","p1","p2","deltaE","deltaN","sqrt","toFixed","gridDistance","isMunro","tbd","height","List","items","onItemClick","handleItemClick","item","map","url","key","onClick","href","Map","lat","lng","zoom","locations","animating","onLocationClick","useState","setMap","mapContainer","useRef","interval","markers","renderMarkers","useEffect","mapboxgl","accessToken","container","current","style","center","on","resize","initializeMap","combinedLocations","forEach","marker","remove","location","i","popup","Popup","offset","setText","el","document","createElement","innerHTML","fontSize","color","addEventListener","handleClick","Marker","setLngLat","setPopup","addTo","flyTo","bounds","LngLatBounds","extend","fitBounds","padding","maxZoom","setInterval","clearInterval","ref","initialState","undefined","results","App","bothies","munros","useReducer","state","action","resultsWithRange","toLowerCase","includes","getResults","reducer","dispatch","onTransitionEnd","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b3f1d569.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { SearchType } from \"./types\";\n\ninterface FormProps {\n  searchType: SearchType;\n  search: string;\n  distance: number;\n  onSearchTypeChange: (searchType: SearchType) => void;\n  onSearchChange: (search: string) => void;\n  onDistanceChange: (distance: number) => void;\n}\n\nexport default function Form({\n  searchType,\n  search,\n  distance,\n  onSearchTypeChange,\n  onSearchChange,\n  onDistanceChange\n}: FormProps) {\n  const handleChange = (callback: (value: any) => void) => (e: any) => {\n    callback(e.currentTarget.value);\n  };\n  const isBothySearch = searchType === \"bothies\";\n\n  return (\n    <form onSubmit={(e: any) => e.preventDefault()}>\n      <fieldset>\n        <p>Find</p>\n        <label className={isBothySearch ? \"show\" : \"hide\"}>\n          Munros\n          <input\n            type=\"radio\"\n            value=\"bothies\"\n            checked={searchType === \"bothies\"}\n            onChange={handleChange(onSearchTypeChange)}\n          />\n        </label>\n        <label className={!isBothySearch ? \"show\" : \"hide\"}>\n          Bothies\n          <input\n            type=\"radio\"\n            value=\"munros\"\n            checked={searchType === \"munros\"}\n            onChange={handleChange(onSearchTypeChange)}\n          />\n        </label>\n      </fieldset>\n      <div>\n        <label htmlFor=\"distance\">within {distance}km</label>\n        <input\n          type=\"range\"\n          id=\"distance\"\n          name=\"distance\"\n          min=\"5\"\n          max=\"50\"\n          value={distance}\n          step=\"5\"\n          onChange={handleChange(onDistanceChange)}\n        />\n      </div>\n      <div>\n        <label htmlFor=\"search\">of</label>\n        <input\n          id=\"search\"\n          value={search}\n          onChange={handleChange(onSearchChange)}\n        />\n        <label htmlFor=\"search\">{isBothySearch ? `bothy` : `munro`}</label>\n      </div>\n    </form>\n  );\n}\n","/*\n * Calculate distance between two National Grid Reference points.\n *\n * 100km grid squares are in 5x5 blocks (total 7x13 blocks); \n * blocks increment left-right then top-bottom (HL-JM down to SV-TW);\n * letter I is skipped to give 25 letters.\n *\n * http://www.ordnancesurvey.co.uk/oswebsite/freefun/nationalgrid/nghelp1.html\n */\n\n\nexport default function gridDistance(ref1, ref2) {\n  // ref1 & ref2 may be 6- or 8-digit references eg SU387148 or SU38714856\n\n  // convert to fully numeric references\n  var p1 = gridrefNumeric(ref1);\n  var p2 = gridrefNumeric(ref2);\n\n  // get E/N distances between ref1 & ref2\n  var deltaE = p2[0]-p1[0];\n  var deltaN = p2[1]-p1[1];\n\n  // and pythagoras gives us the distance between the points\n  var dist = Math.sqrt(deltaE*deltaE + deltaN*deltaN);\n\n  return (dist/1000).toFixed(2); // return result in km, 2 decimals\n}\n\n\nfunction gridBearing(ref1, ref2) {\n  // split numeric references into arrays\n  var p1 = gridrefNumeric(ref1);\n  var p2 = gridrefNumeric(ref2);\n\n  // get E/N distances between ref1 & ref2\n  var deltaE = p2[0]-p1[0];\n  var deltaN = p2[1]-p1[1];\n\n  // arctan gives us the bearing, just need to convert -pi..+pi to 0..360 deg\n  var deg = (90-(Math.atan2(deltaN, deltaE)/Math.PI*180)+360) % 360;\n  \n  return deg.toFixed(0);  // return result in degrees, no decimals\n}\n\n\n/* \n * convert standard grid reference ('SU387148') to fully numeric ref ([438700,114800])\n *\n *   note that northern-most grid squares will give 5-digit northings\n *   no error-checking is done on gridref (bad input will give bad results or NaN)\n */\nfunction gridrefNumeric(gridref) {\n  // get numeric values of letter references, mapping A->0, B->1, C->2, etc:\n  var letE = gridref.toUpperCase().charCodeAt(0) - 'A'.charCodeAt(0);\n  var letN = gridref.toUpperCase().charCodeAt(1) - 'A'.charCodeAt(0);\n  // shuffle down letters after 'I' since 'I' is not used in grid:\n  if (letE > 7) letE -= 1;\n  if (letN > 7) letN -= 1;\n\n  // convert grid letters into 100km-square indexes from false origin (grid square SV):\n  var e = ((letE+3)%5)*5 + (letN%5);\n  var n = (19-Math.floor(letE/5)*5) - Math.floor(letN/5);\n\n  // skip grid letters to get numeric part of ref, stripping any spaces:\n  gridref = gridref.slice(2).replace(/ /g,'');\n\n  // append numeric part of references to grid index:\n  e += gridref.slice(0, gridref.length/2);\n  n += gridref.slice(gridref.length/2);\n\n  // normalise to 1m grid:\n  switch (gridref.length) {\n    case 6: e += '00'; n += '00'; break;\n    case 8: e += '0'; n += '0'; break;\n    // 10-digit refs are already 1m\n  }\n\n  return [e, n];\n}","import gridDistance from \"./gridDistance\";\n\nimport { Data, SearchType, ResultType, Munro } from \"./types\";\n\nexport const getResults = (\n  data: Data,\n  searchType: SearchType,\n  search: string\n) =>\n  search.length > 2\n    ? data[searchType].filter((el: any) =>\n        el.name.toLowerCase().includes(search)\n      )\n    : [];\n\nexport const getResultsWithinRange = (\n  data: Data,\n  searchType: SearchType,\n  selected: ResultType,\n  distance: number\n) =>\n  data[searchType === \"bothies\" ? \"munros\" : \"bothies\"].filter(\n    ({ grid }: any) => parseInt(gridDistance(selected.grid, grid)) <= distance\n  );\n\nexport const isMunro = (tbd: ResultType): boolean => {\n  if ((tbd as Munro).height) {\n    return true;\n  }\n  return false;\n};\n","import React from \"react\";\n\nimport { ResultType, Munro } from \"./types\";\nimport { isMunro } from \"./utils\";\n\nexport default function List({\n  items,\n  onItemClick\n}: {\n  items: ResultType[];\n  onItemClick: (item: ResultType) => void;\n}) {\n  const handleItemClick = (item: ResultType) => (e: any) => onItemClick(item);\n  return (\n    <ul>\n      {items.map((item: ResultType) => {\n        const { name, grid, url } = item;\n        return (\n          <li key={`${name}${grid}`}>\n            <article onClick={handleItemClick(item)}>\n              <h1>{name}</h1>\n              <dl>\n                <div>\n                  <dt>Grid reference:</dt>\n                  <dd>{grid}</dd>\n                </div>\n                {isMunro(item) && (\n                  <div>\n                    <dt>Height:</dt>\n                    <dd>{(item as Munro).height} metres</dd>\n                  </div>\n                )}\n              </dl>\n              <a href={url}>More info</a>\n            </article>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\n\nimport { ResultType } from \"./types\";\nimport { isMunro } from \"./utils\";\n\ninterface Props {\n  lat: number;\n  lng: number;\n  zoom: number;\n  locations: ResultType[];\n  selected?: ResultType;\n  animating: boolean;\n  onLocationClick: (item: ResultType) => void;\n}\n\nexport default function Map({\n  lat,\n  lng,\n  zoom,\n  locations,\n  selected,\n  animating,\n  onLocationClick\n}: Props) {\n  const [map, setMap] = useState(null);\n  const mapContainer: any = useRef(null);\n  const interval: any = useRef(null);\n\n  const markers: any = useRef([]);\n  const renderMarkers = useRef(false);\n\n  const handleClick = (location: ResultType) => () => {\n    if (!selected) {\n      onLocationClick(location);\n    }\n  };\n\n  useEffect(() => {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoibmV0LXVrLXN3ZWV0IiwiYSI6ImNrMzRmaGJqdDBpNW8zaXBqaDg2bWxqazQifQ.xVC6ifqr4x70o3xHXnASyA\";\n    const initializeMap = ({ setMap, mapContainer }: any) => {\n      const map: any = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/net-uk-sweet/ck395oc6o23271ct39ql8ph1y\", // stylesheet location\n        center: [lng, lat],\n        zoom: zoom\n      });\n\n      map.on(\"load\", () => {\n        renderMarkers.current = true;\n        setMap(map);\n        map.resize();\n      });\n    };\n\n    if (!map) initializeMap({ setMap, mapContainer });\n  }, [lat, lng, map, zoom]);\n\n  useEffect(() => {\n    let combinedLocations = locations;\n\n    if (!renderMarkers.current) {\n      return;\n    }\n    if (selected) {\n      combinedLocations = [selected, ...combinedLocations];\n    }\n    if (markers.current.length) {\n      markers.current.forEach((marker: any) => {\n        marker.remove();\n      });\n    }\n    markers.current = combinedLocations.map((location, i) => {\n      const popup = new mapboxgl.Popup({ offset: [-15, -15] }).setText(\n        location.name\n      );\n\n      const el = document.createElement(\"div\");\n      el.innerHTML = isMunro(location) ? \"&#9650\" : \"&#x2302\";\n      el.style.fontSize = isMunro(location) ? \"25px\" : \"35px\";\n      el.style.color = i === 0 && selected ? \"red\" : \"black\";\n      el.addEventListener(\"click\", handleClick(location));\n\n      return new mapboxgl.Marker(el, { offset: [-15, -15] })\n        .setLngLat([location.lng, location.lat])\n        .setPopup(popup)\n        .addTo(map as any);\n    });\n\n    if (combinedLocations.length === 1) {\n      (map as any).flyTo({ center: locations[0] });\n    }\n\n    if (combinedLocations.length > 1) {\n      const bounds = new mapboxgl.LngLatBounds();\n\n      combinedLocations.forEach(function({ lng, lat }) {\n        bounds.extend([lng, lat] as any);\n      });\n\n      (map as any).fitBounds(bounds, {\n        padding: 75,\n        maxZoom: 15\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (!map) {\n      return;\n    }\n    if (!animating && interval.current) {\n      // console.log(\"clearing animation\");\n      interval.current && clearInterval(interval.current);\n      return;\n    }\n    // console.log(\"starting animation\");\n    interval.current = setInterval(() => (map as any).resize(), 100);\n  }, [animating, map]);\n\n  return (\n    <div>\n      <div ref={el => (mapContainer.current = el)} className=\"mapContainer\" />\n    </div>\n  );\n}\n","import React, { useReducer } from \"react\";\nimport \"./App.css\";\n\nimport { Data, SearchType, ResultType } from \"./types\";\n\nimport bothies from \"./bothies.json\";\nimport munros from \"./munros.json\";\n\nimport Form from \"./Form\";\nimport List from \"./List\";\nimport Map from \"./Map\";\n\nimport { getResults, getResultsWithinRange } from \"./utils\";\n\ninterface State {\n  searchType: SearchType;\n  search: string;\n  distance: number;\n  selected?: ResultType;\n  results: ResultType[];\n  animating: boolean;\n}\n\nconst initialState: State = {\n  searchType: \"bothies\",\n  search: \"\",\n  distance: 10,\n  selected: undefined,\n  results: [],\n  animating: false\n};\n\nconst reducer = (data: any) => (state: State, action: any): State => {\n  const { searchType, distance } = state;\n  let { selected } = state;\n  let results: ResultType[] = [];\n\n  const resultsWithRange = (selected: ResultType, distance: number) =>\n    getResultsWithinRange(data, searchType, selected, distance);\n\n  switch (action.type) {\n    case \"search\":\n      const search: string = action.value;\n      results = getResults(data, state.searchType, search);\n      if (selected) {\n        selected = undefined;\n      }\n      if (results.length === 1) {\n        selected = results[0];\n        results = resultsWithRange(selected, distance);\n      }\n      return {\n        ...state,\n        selected,\n        search,\n        results\n      };\n    case \"searchType\":\n      return {\n        ...state,\n        searchType: action.value,\n        search: \"\",\n        selected: undefined,\n        results: []\n      };\n    case \"distance\":\n      if (selected) {\n        results = resultsWithRange(selected, action.value);\n      }\n      return {\n        ...state,\n        distance: action.value,\n        results\n      };\n    case \"select\":\n      selected = action.value as ResultType;\n      results = resultsWithRange(selected, distance);\n      return {\n        ...state,\n        selected,\n        results\n      };\n    case \"animating\":\n      return {\n        ...state,\n        animating: action.value\n      };\n    default:\n      return { ...state };\n  }\n};\n\nconst App: React.FC = () => {\n  const data: Data = {\n    bothies,\n    munros\n  };\n\n  const [\n    { searchType, search, distance, selected, results, animating },\n    dispatch\n  ] = useReducer(reducer(data), initialState);\n\n  const handleSearchTypeChange = (searchType: SearchType) => {\n    dispatch({ type: \"searchType\", value: searchType });\n  };\n\n  const handleSearchChange = (search: string) => {\n    dispatch({ type: \"search\", value: search });\n  };\n\n  const handleDistanceChange = (distance: number) => {\n    dispatch({ type: \"distance\", value: distance });\n  };\n\n  const handleItemClick = (item: ResultType) => {\n    dispatch({ type: \"select\", value: item });\n  };\n\n  const handleSidebarTransitionEnd = () => {\n    dispatch({ type: \"animating\", value: false });\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <header className=\"header\">\n        <h1>Bothy finder</h1>\n      </header>\n      <div className={`toolbar`}>\n        <Form\n          searchType={searchType}\n          search={search}\n          distance={distance}\n          onSearchTypeChange={handleSearchTypeChange}\n          onSearchChange={handleSearchChange}\n          onDistanceChange={handleDistanceChange}\n        />\n      </div>\n      <main className=\"main\">\n        <section className=\"map\">\n          <Map\n            lat={57.09638090114919}\n            lng={-4.298098692290864}\n            zoom={6.75}\n            locations={results}\n            selected={selected}\n            animating={animating}\n            onLocationClick={handleItemClick}\n          />\n        </section>\n        <div\n          className={`sidebar ${results.length ? \"open\" : \"\"}`}\n          onTransitionEnd={handleSidebarTransitionEnd}\n        >\n          <List items={results} onItemClick={handleItemClick} />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}